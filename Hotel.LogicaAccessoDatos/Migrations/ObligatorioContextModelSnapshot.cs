// <auto-generated />
using System;
using Hotel.LogicaAccessoDatos.EF.Hotel.LogicaAccessoDatos.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.LogicaAccessoDatos.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    partial class ObligatorioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Cabania", b =>
                {
                    b.Property<int>("CabaniaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabaniaId"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Habilitada")
                        .HasColumnType("bit");

                    b.Property<bool>("Jacuzzi")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxPersonas")
                        .HasColumnType("int");

                    b.Property<int>("TipoAsociado")
                        .HasColumnType("int");

                    b.HasKey("CabaniaId");

                    b.HasIndex("TipoAsociado");

                    b.ToTable("Cabania");
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.Property<int>("MantenimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MantenimientoId"));

                    b.Property<int>("CabaniaAsociada")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("MantenimientoId");

                    b.HasIndex("CabaniaAsociada");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Tipo", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoId"));

                    b.Property<double>("CostoxHuesped")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoId");

                    b.ToTable("Tipo");
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Email");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Cabania", b =>
                {
                    b.HasOne("Hotel.LogicaNegocio.Entidades.Tipo", "MiTipo")
                        .WithMany()
                        .HasForeignKey("TipoAsociado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Hotel.LogicaNegocio.ValueObjects.NombreCabana", "Nombre", b1 =>
                        {
                            b1.Property<int>("CabaniaId")
                                .HasColumnType("int");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("CabaniaId");

                            b1.ToTable("Cabania");

                            b1.WithOwner()
                                .HasForeignKey("CabaniaId");
                        });

                    b.OwnsOne("HotelLogicaNegocio.ValueObjects.Imagen", "Foto", b1 =>
                        {
                            b1.Property<int>("CabaniaId")
                                .HasColumnType("int");

                            b1.Property<string>("Nombre")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CabaniaId");

                            b1.ToTable("Cabania");

                            b1.WithOwner()
                                .HasForeignKey("CabaniaId");
                        });

                    b.Navigation("Foto")
                        .IsRequired();

                    b.Navigation("MiTipo");

                    b.Navigation("Nombre");
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("Hotel.LogicaNegocio.Entidades.Cabania", "MiCabania")
                        .WithMany()
                        .HasForeignKey("CabaniaAsociada")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("HotelLogicaNegocio.ValueObjects.NameManten", "Responsable", b1 =>
                        {
                            b1.Property<int>("MantenimientoId")
                                .HasColumnType("int");

                            b1.Property<string>("NombreM")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("MantenimientoId");

                            b1.ToTable("Mantenimientos");

                            b1.WithOwner()
                                .HasForeignKey("MantenimientoId");
                        });

                    b.Navigation("MiCabania");

                    b.Navigation("Responsable")
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Tipo", b =>
                {
                    b.OwnsOne("HotelLogicaNegocio.ValueObjects.NameTipo", "Nombre", b1 =>
                        {
                            b1.Property<int>("TipoId")
                                .HasColumnType("int");

                            b1.Property<string>("NameT")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Nombre");

                            b1.HasKey("TipoId");

                            b1.HasIndex("NameT")
                                .IsUnique();

                            b1.ToTable("Tipo");

                            b1.WithOwner()
                                .HasForeignKey("TipoId");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Hotel.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.OwnsOne("HotelLogicaNegocio.ValueObjects.Contra", "Password", b1 =>
                        {
                            b1.Property<string>("UsuarioEmail")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Pass")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioEmail");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioEmail");
                        });

                    b.Navigation("Password")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
